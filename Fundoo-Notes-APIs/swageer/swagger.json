{
  "swagger": "2.0",
  "definitions": {
    "userinfo": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First Name of user."
        },
        "lastName": {
          "type": "string",
          "description": "First Name of user."
        },
        "email": {
          "type": "string",
          "description": "Email ID of user."
        },
        "password": {
          "type": "string",
          "description": "Password of user."
        }
      },
      "example": {
        "firstName": "Akash",
        "lastName": "Pawar",
        "email": "akashpawar6@gmail.com",
        "password": "akashG2@7"
      }
    },
    "logininfo": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email ID of user."
        },
        "password": {
          "type": "string",
          "description": "Password of user."
        }
      },
      "example": {
        "email": "akashpawd4@gmail.com",
        "password": "akashf8@7"
      }
    },
    "forgetPass": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email ID of user."
        }
      },
      "example": {
        "email": "dattagavhad121@gmail.com"
      }
    },
    "collab": {
      "type": "object",
      "properties": {
        "collabUI": {
          "type": "string",
          "description": "collaborator user ID "
        }
      },
      "example": {
        "collabUI": " "
      }
    },
    "ResetPass": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "New Password of user"
        }
      },
      "example": {
        "password": "Gaesh@7779"
      }
    },
    "notes": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "example": {
        "title": "What whould you like for tittle ?.....",
        "description": "Hey enter here description of notes....."
      }
    },
    "label": {
      "type": "object",
      "properties": {
        "labelName": {
          "type": "string"
        }
      },
      "example": {
        "labelName": "What whould you like for label Name ?....."
      }
    },
    "labelId": {
      "type": "object",
      "properties": {
        "labelId": {
          "type": "string"
        }
      },
      "example": {
        "labelId": ""
      }
    }
  },
  "info": {
    "version": "1.0.0",
    "title": "FundooNote App",
    "description": "This app is build to keep record of notes",
    "license": {
      "name": "ISC License",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "host": "localhost:3000",
  "tags": [
    {
      "name": "FUNDOO NOTES KEEPING APP",
      "description": "Keep your all IMP notes safe"
    }
  ],
  "schemes": ["http"],

  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/register": {
      "post": {
        "tags": ["User Registration"],
        "description": "Create a new user in the FundooNotes App",
        "parameters": [
          {
            "name": "User Registration",
            "in": "body",
            "description": "User that we wants to create",
            "schema": {
              "$ref": "#/definitions/userinfo"
            }
          }
        ],
        "produces": ["application/json"],
        "schema": {
          "$ref": "#/definitions/userinfo"
        },
        "responses": {
          "201": {
            "description": "User created successfullyü§ûü§©"
          },
          "409": {
            "description": "User already existüòí"
          },
          "500": {
            "description": "Internal server errorüåç"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["User Login"],
        "description": "Already registered ? Then login using email and password",
        "parameters": [
          {
            "name": "User Login",
            "in": "body",
            "description": "login here with login info ",
            "schema": {
              "$ref": "#/definitions/logininfo"
            }
          }
        ],
        "produces": ["application/json"],
        "schema": {
          "$ref": "#/definitions/logininfo"
        },
        "responses": {
          "201": {
            "description": "User logged in successfullyü§©ü§û"
          },
          "401": {
            "description": "Unable to login. Please enter correct login infoüòí"
          },
          "500": {
            "description": "Internal server errorüåç"
          }
        }
      }
    },
    "/forgotPassword": {
      "post": {
        "tags": ["Forget Password"],
        "description": "forget Password? you will get link to reset your password",
        "parameters": [
          {
            "name": "Forget password",
            "in": "body",
            "description": "user will get link to reset password ",
            "schema": {
              "$ref": "#/definitions/forgetPass"
            }
          }
        ],
        "produces": ["application/json"],
        "schema": {
          "$ref": "#/definitions/forgetPass"
        },
        "responses": {
          "200": {
            "description": "Email reset link send successfullyü§ûü§©"
          },
          "400": {
            "description": "Please enter your valid emailüòí"
          },
          "500": {
            "description": "Internal server errorüåç"
          }
        }
      }
    },
    "/resetPassword": {
      "put": {
        "tags": [" Reset Password"],
        "Summarry": "reset password",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "token for validation..! Please enter a string before pasting token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resetPassword",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ResetPass"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password Reset Successfulü§©ü§û"
          },
          "401": {
            "description": "Unauthorized Userüòí"
          },
          "500": {
            "description": "Internal Errorüåç"
          }
        }
      }
    },
    "/createnotes": {
      "post": {
        "tags": ["Create Notes"],
        "description": "Create note !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "name": "create note",
            "in": "body",
            "description": "Note's body",
            "schema": {
              "$ref": "#/definitions/notes"
            }
          }
        ],
        "produces": ["application/json"],
        "schema": {
          "$ref": "#/definitions/notes"
        },
        "responses": {
          "201": {
            "description": "Note Created Succesfully ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "500": {
            "description": "Internal server errorüåç"
          }
        }
      }
    },
    "/getAllNotes": {
      "get": {
        "tags": ["Get All Notes"],
        "description": "You will get your all Notes !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Here is your all Notes ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "500": {
            "description": "Some error occurred while retrieving notesüåç"
          }
        }
      }
    },
    "/getByID/{noteID}": {
      "get": {
        "tags": ["Get Note By ID"],
        "description": "You will get your all Notes !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "noteID",
            "description": "Enter note ID",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Here is your Notes ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "500": {
            "description": "Some error occurred while retrieving notesüåç"
          }
        }
      }
    },
    "/updateNoteById/{noteID}": {
      "put": {
        "tags": ["Update Note By ID"],
        "description": "Update Note That You Want..! !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "noteID",
            "description": "Enter note ID",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "name": "Update Note",
            "in": "body",
            "description": "Note's body",
            "schema": {
              "$ref": "#/definitions/notes"
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Here is your Updated Note ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "500": {
            "description": "Some error occurred while retrieving notesüåç"
          }
        }
      }
    },
    "/deleteById/{noteID}": {
      "delete": {
        "tags": ["Delete Note By ID"],
        "description": "You will able to delete your note !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "noteID",
            "description": "Enter ID of note to delete",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Note successfully Deleted ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "500": {
            "description": "Some error occurred while retrieving notesüåç"
          }
        }
      }
    },
    "/createLabel": {
      "post": {
        "tags": ["Create Label"],
        "description": "Create Label !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "name": "Create Label",
            "in": "body",
            "description": "Note's body",
            "schema": {
              "$ref": "#/definitions/label"
            }
          }
        ],
        "produces": ["application/json"],
        "schema": {
          "$ref": "#/definitions/label"
        },
        "responses": {
          "201": {
            "description": "Label Created Succesfully ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "404": {
            "description": "Unable to create Noteüòí"
          },
          "500": {
            "description": "Some internal error occurred üåç"
          }
        }
      }
    },
    "/getAllLabel": {
      "get": {
        "tags": ["Get All Label"],
        "description": "You will get your all Label !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Here is your all Label ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "404": {
            "description": "Unable to retrieve all labelüòí"
          },
          "500": {
            "description": "Some internal error occurred üåç"
          }
        }
      }
    },
    "/getLabelbyID/{labelID}": {
      "get": {
        "tags": ["Get Label By ID"],
        "description": "You will get your Label By ID !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "labelID",
            "description": "Enter label ID",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Here is your label ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "404": {
            "description": "Unable to retrieve labelüòí"
          },
          "500": {
            "description": "Some internal error occurred üåç"
          }
        }
      }
    },
    "/updateLabelById/{labelID}": {
      "put": {
        "tags": ["Update label By ID"],
        "description": "Update label That You Want..! !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "labelID",
            "description": "Enter Label ID",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "name": "Update Note",
            "in": "body",
            "description": "Label body",
            "schema": {
              "$ref": "#/definitions/label"
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Here is your Updated Label ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "404": {
            "description": "Unable to update labelüòí"
          },
          "500": {
            "description": "Some internal error occurred üåç"
          }
        }
      }
    },
    "/deleteLabelById/{labelID}": {
      "delete": {
        "tags": ["Delete Label By ID"],
        "description": "You will able to delete your Label !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "labelID",
            "description": "Enter ID of label to delete",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Label successfully Deleted ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "404": {
            "description": "Unable to Delete labelüòí"
          },
          "500": {
            "description": "Some internal error occurred üåç"
          }
        }
      }
    },
    "/addLabel/{noteID}": {
      "post": {
        "tags": [" upadate label To Note "],
        "description": "Update label To Note That You Want..! !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "noteID",
            "description": "Enter Note ID",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "name": "Update Label to note",
            "in": "body",
            "description": "Label ID body",
            "schema": {
              "$ref": "#/definitions/labelId"
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "label Added succesfully ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "404": {
            "description": "Unable to update labelüòí"
          },
          "500": {
            "description": "Some internal error occurred üåç"
          }
        }
      }
    },
    "/deleteLabelFromNote/{noteID}": {
      "delete": {
        "tags": [" Delete label From Note "],
        "description": "Delete label From Note That You Want..! !!",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "noteID",
            "description": "Enter Note ID",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "name": "Update Label to note",
            "in": "body",
            "description": "Label ID body",
            "schema": {
              "$ref": "#/definitions/labelId"
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Label Deleted succesfully ü§ûüòâ!!"
          },
          "400": {
            "description": "Please enter Valid Tokenü§™"
          },
          "500": {
            "description": "Some internal error occurred üåç"
          }
        }
      }
    },
    "/shareNote/{noteID}": {
      "post": {
        "tags": [" Share Note "],
        "description": "Share Note By Email !",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Token for vaidation..! Please Enter a string before puting token..!",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "noteID",
            "description": "Enter Note ID",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "name": "Collaborator User ID",
            "in": "body",
            "description": " Collab User ID ",
            "schema": {
              "$ref": "#/definitions/collab"
      
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Note share with collaborator succesfully"
          },
          "400": {
            "description": " collaborator already Existü§™"
          },
          "404": {
            "description": "invalid collaborator, collaborator user id does not Existü§™"
          },
          "422": {
            "description": "Invalid collaborator userIDüòí"
          },
          "500": {
            "description": "Some internal error occurred üåç"
          }
        }
      }
    }
  }
}
